declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)

@_a = constant i32 0
@HelLo_World = global [5 x i32] [i32 1, i32 55, i32 0, i32 10, i32 9999]
@a_r__r = global [2 x [2 x i32]] [[2 x i32] [i32 -1, i32 0], [2 x i32] [i32 6, i32 -555]]
@_A = constant i32 6
@B = global [1 x [1 x i32]] [[1 x i32] [i32 9966]]
@_ = constant i32 12
@c = global [1 x i32] [i32 555]
@__ = constant i32 4
@con_6 = global [2 x [1 x i32]] [[1 x i32] [i32 0], [1 x i32] [i32 6]]
@lll = constant i32 1
@rrr = constant i32 2
@awk_ = constant i32 11
@const_num = constant i32 5
@yyy = global [2 x [3 x i32]] [[3 x i32] [i32 1, i32 0, i32 2], [3 x i32] [i32 -1, i32 3, i32 -4]]
@var_1 = global i32 0
@var_2 = global [100 x i32] zeroinitializer
@var_3 = global [2 x [12 x i32]] zeroinitializer
@varr_1 = global i32 0
@varr_2 = global i32 10
@varr_3 = global [2 x i32] zeroinitializer
@varr_4 = global [5 x [999 x i32]] zeroinitializer
@varrr_1 = global i32 10
@varrr_2 = global [2 x i32] [i32 1, i32 2]
@varrr_3 = global [2 x [2 x i32]] [[2 x i32] [i32 6, i32 6], [2 x i32] [i32 -1, i32 0]]
@varrrr_1 = global i32 666
@varrrr_2 = global i32 0
@varrrr_3 = global [5 x i32] [i32 1, i32 5, i32 1, i32 96, i32 -5]
@varrrr_4 = global [1 x [2 x i32]] [[2 x i32] [i32 555, i32 -5]]

define dso_local void @func1(i32 %0){
l0:
	%1 = load i32, i32* @_a
	%2 = add i32 %1, 1
	%3 = add i32 %2, 2
	%4 = sub i32 %3, 1
	ret void 
}

define dso_local i32 @func2(i32 %0, i32* %1){
l1:
	%2 = alloca i32*
	store i32* %1, i32** %2
	%3 = load i32, i32* @_A
	%4 = add i32 %3, 5
	%5 = sub i32 %4, 6
	%6 = load i32, i32* @_A
	%7 = sub i32 %6, 6
	%8 = load i32*, i32** %2
	%9 = getelementptr i32, i32* %8, i32 %7
	store i32 46554646, i32* %9
	%10 = icmp eq i32 %5, 5
	%11 = icmp ne i1 %10, 0
	br i1 %11, label %l2, label %l3
l2:
	br label %l3
l3:
	%12 = icmp slt i32 %5, 10
	%13 = icmp ne i1 %12, 0
	br i1 %13, label %l4, label %l6
l4:
	br label %l5
l5:
	%14 = phi i32 [ 0, %l4 ],[ 0, %l6 ]
	%15 = phi i32 [ 0, %l4 ],[ 0, %l6 ]
	%16 = phi i32 [ 0, %l4 ],[ 0, %l6 ]
	%17 = phi i32 [ 0, %l4 ],[ 0, %l6 ]
	%18 = phi i32 [ 1000, %l4 ],[ %23, %l6 ]
	ret i32 666
l6:
	%19 = load i32, i32* @_A
	%20 = sub i32 %19, 5
	%21 = load i32*, i32** %2
	%22 = getelementptr i32, i32* %21, i32 %20
	%23 = load i32, i32* %22
	br label %l5
}

define dso_local void @func3([3 x i32]* %0){
l7:
	%1 = alloca [3 x i32]*
	store [3 x i32]* %0, [3 x i32]** %1
	%2 = load i32, i32* @_
	%3 = sub i32 %2, 12
	%4 = load [3 x i32]*, [3 x i32]** %1
	%5 = getelementptr [3 x i32], [3 x i32]* %4, i32 %3, i32 0
	%6 = load i32, i32* %5
	%7 = icmp sgt i32 %6, 10
	%8 = icmp ne i1 %7, 0
	br i1 %8, label %l8, label %l10
l8:
	ret void 
l9:
	br label %l11
l10:
	br label %l9
l11:
	%9 = phi i32 [ 0, %l9 ],[ 0, %l14 ]
	%10 = phi i32 [ 0, %l9 ],[ 0, %l14 ]
	%11 = phi i32 [ 0, %l9 ],[ 0, %l14 ]
	%12 = phi i32 [ 0, %l9 ],[ %22, %l14 ]
	%13 = icmp slt i32 %12, 100
	%14 = icmp ne i1 %13, 0
	br i1 %14, label %l12, label %l13
l12:
	%15 = icmp eq i32 %12, 50
	%16 = icmp ne i1 %15, 0
	br i1 %16, label %l15, label %l17
l13:
	ret void 
l14:
	br label %l11
l15:
	%17 = load [3 x i32]*, [3 x i32]** %1
	%18 = getelementptr [3 x i32], [3 x i32]* %17, i32 0, i32 0
	store i32 1, i32* %18
	br label %l13
l16:
	%19 = phi i32 [ 0, %l15 ],[ 0, %l17 ]
	%20 = phi i32 [ 0, %l15 ],[ 0, %l17 ]
	%21 = phi i32 [ 0, %l15 ],[ 0, %l17 ]
	%22 = phi i32 [ %12, %l15 ],[ %23, %l17 ]
	br label %l14
l17:
	%23 = add i32 %12, 1
	br label %l14
}

define dso_local i32 @func4(i32 %0, i32* %1, [3 x i32]* %2){
l18:
	%3 = alloca i32*
	store i32* %1, i32** %3
	%4 = alloca [3 x i32]*
	store [3 x i32]* %2, [3 x i32]** %4
	%5 = load i32*, i32** %3
	%6 = getelementptr i32, i32* %5, i32 0
	%7 = load i32, i32* %6
	%8 = load [3 x i32]*, [3 x i32]** %4
	%9 = getelementptr [3 x i32], [3 x i32]* %8, i32 0, i32 1
	%10 = load i32, i32* %9
	%11 = load i32*, i32** %3
	%12 = getelementptr i32, i32* %11, i32 1
	%13 = load i32, i32* %12
	%14 = add i32 %0, %13
	%15 = load [3 x i32]*, [3 x i32]** %4
	%16 = getelementptr [3 x i32], [3 x i32]* %15, i32 0, i32 0
	%17 = load i32, i32* %16
	%18 = add i32 %14, %17
	%19 = add i32 1, %0
	%20 = sub i32 0, %19
	%21 = add i32 1, %0
	%22 = add i32 %21, 44
	%23 = add i32 1, 2
	%24 = add i32 %22, %23
	%25 = add i32 %20, %24
	%26 = mul i32 1, 5
	%27 = sdiv i32 %26, 4
	%28 = mul i32 5, 4
	%29 = srem i32 %28, 4
	%30 = sub i32 %27, %29
	%31 = mul i32 6, %0
	%32 = mul i32 1, 6
	%33 = sdiv i32 8, 444
	%34 = add i32 %33, 6
	%35 = sdiv i32 55, 8
	%36 = mul i32 5, 9
	%37 = srem i32 9, 44
	ret i32 999
}

define dso_local i32 @func5(){
l19:
	%0 = icmp eq i32 1, 2
	%1 = icmp ne i1 %0, 0
	br i1 %1, label %l20, label %l23
l20:
	ret i32 1111
l21:
	%2 = sub i32 0, 555
	ret i32 %2
l22:
	%3 = icmp eq i32 666, 0
	%4 = load i32, i32* @_
	%5 = sub i32 0, %4
	%6 = zext i1 %3 to i32
	%7 = icmp ne i32 %6, %5
	%8 = icmp ne i1 %7, 0
	br i1 %8, label %l25, label %l27
l23:
	%9 = load i32, i32* @_a
	%10 = icmp ne i32 2, %9
	%11 = icmp ne i1 %10, 0
	br i1 %11, label %l24, label %l22
l24:
	%12 = add i32 6666, 5
	%13 = icmp eq i32 %12, 4
	%14 = icmp ne i1 %13, 0
	br i1 %14, label %l20, label %l22
l25:
	ret i32 5464
l26:
	br label %l21
l27:
	%15 = load i32, i32* @__
	%16 = getelementptr [2 x [12 x i32]], [2 x [12 x i32]]* @var_3, i32 0, i32 1, i32 1
	%17 = load i32, i32* %16
	%18 = mul i32 55, %17
	%19 = icmp sle i32 %15, %18
	%20 = icmp ne i1 %19, 0
	br i1 %20, label %l28, label %l31
l28:
	ret i32 4564665
l29:
	br label %l26
l30:
	%21 = icmp ne i32 1, 0
	br i1 %21, label %l33, label %l36
l31:
	%22 = icmp sge i32 2, 54564
	%23 = icmp ne i1 %22, 0
	br i1 %23, label %l28, label %l32
l32:
	%24 = sub i32 1, 2
	%25 = icmp eq i32 %24, 6
	%26 = icmp ne i1 %25, 0
	br i1 %26, label %l28, label %l30
l33:
	ret i32 5456
l34:
	br label %l29
l35:
	ret i32 55555
l36:
	%27 = load i32, i32* @varrrr_2
	%28 = add i32 2, %27
	%29 = icmp slt i32 1, %28
	%30 = icmp ne i1 %29, 0
	br i1 %30, label %l33, label %l37
l37:
	%31 = load i32, i32* @_a
	%32 = icmp sgt i32 8, %31
	%33 = icmp ne i1 %32, 0
	br i1 %33, label %l33, label %l35
}

define dso_local i32 @main(){
l38:
	%0 = load i32, i32* @_a
	%1 = mul i32 1, %0
	%2 = mul i32 2, 8
	%3 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @a_r__r, i32 0, i32 1, i32 1
	%4 = load i32, i32* %3
	%5 = sub i32 123, %4
	%6 = load i32, i32* @varrrr_1
	%7 = sdiv i32 5555, %6
	%8 = alloca [2 x [3 x i32]]
	%9 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %8, i32 0, i32 0, i32 0
	store i32 %1, i32* %9
	%10 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %8, i32 0, i32 0, i32 1
	store i32 %2, i32* %10
	%11 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %8, i32 0, i32 0, i32 2
	store i32 3, i32* %11
	%12 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %8, i32 0, i32 0, i32 3
	store i32 %5, i32* %12
	%13 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %8, i32 0, i32 0, i32 4
	store i32 %7, i32* %13
	%14 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %8, i32 0, i32 0, i32 5
	store i32 0, i32* %14
	%15 = sdiv i32 1, 2
	%16 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %8, i32 0, i32 0, i32 0
	%17 = load i32, i32* %16
	%18 = mul i32 6, %17
	%19 = mul i32 5, 8
	%20 = sdiv i32 %19, 4
	%21 = mul i32 %20, 5
	%22 = sub i32 22, %21
	%23 = srem i32 5, 4
	%24 = add i32 %22, %23
	%25 = alloca [4 x i32]
	%26 = getelementptr [4 x i32], [4 x i32]* %25, i32 0, i32 0
	store i32 %15, i32* %26
	%27 = getelementptr [4 x i32], [4 x i32]* %25, i32 0, i32 1
	store i32 %18, i32* %27
	%28 = getelementptr [4 x i32], [4 x i32]* %25, i32 0, i32 2
	store i32 5555, i32* %28
	%29 = getelementptr [4 x i32], [4 x i32]* %25, i32 0, i32 3
	store i32 %24, i32* %29
	%30 = alloca i32
	%31 = call i32 @getint()
	%32 = load i32, i32* @varr_2
	call void @func1(i32 %32)
	%33 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %8, i32 0, i32 1, i32 2
	%34 = call i32 @getint()
	store i32 %34, i32* %33
	%35 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %8, i32 0, i32 1, i32 0
	%36 = call i32 @func2(i32 111, i32* %35)
	%37 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %8, i32 0, i32 0
	call void @func3([3 x i32]* %37)
	%38 = getelementptr [4 x i32], [4 x i32]* %25, i32 0, i32 1
	%39 = call i32 @getint()
	store i32 %39, i32* %38
	%40 = getelementptr [4 x i32], [4 x i32]* %25, i32 0, i32 0
	%41 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %8, i32 0, i32 0
	%42 = call i32 @func4(i32 %31, i32* %40, [3 x i32]* %41)
	%43 = call i32 @func5()
	call void @putint(i32 1)
	call void @putch(i32 10)
	call void @putint(i32 1)
	call void @putch(i32 10)
	call void @putint(i32 1)
	call void @putch(i32 10)
	call void @putint(i32 1)
	call void @putch(i32 10)
	call void @putint(i32 1)
	call void @putch(i32 10)
	call void @putint(i32 1)
	call void @putch(i32 10)
	call void @putint(i32 1)
	call void @putch(i32 10)
	call void @putint(i32 1)
	call void @putch(i32 10)
	call void @putint(i32 1)
	call void @putch(i32 10)
	ret i32 0
}

