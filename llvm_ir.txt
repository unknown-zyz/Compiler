declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)

@a = global [6 x i32] [i32 1, i32 2, i32 3, i32 4, i32 5, i32 6]
@b = global [3 x [3 x i32]] [[3 x i32] [i32 3, i32 8, i32 5], [3 x i32] [i32 1, i32 2, i32 0], [3 x i32] [i32 0, i32 0, i32 0]]

define dso_local void @a1(i32 %0){
block0:
	%1 = alloca i32
	store i32 %0, i32* %1
	%2 = load i32, i32* %1
	%3 = icmp sgt i32 %2, 1
	%4 = icmp ne i1 %3, 0
	br i1 %4, label %block1, label %block2
block1:
	%5 = load i32, i32* %1
	%6 = sub i32 %5, 1
	call void @a1(i32 %6)
	br label %block2
block2:
	ret void 
}

define dso_local i32 @a2(i32 %0, i32* %1){
block3:
	%2 = alloca i32
	store i32 %0, i32* %2
	%3 = alloca i32*
	store i32* %1, i32** %3
	%4 = load i32, i32* %2
	%5 = load i32*, i32** %3
	%6 = getelementptr i32, i32* %5, i32 2
	%7 = load i32, i32* %6
	%8 = add i32 %4, %7
	ret i32 %8
}

define dso_local i32 @a3(i32 %0, i32* %1, [3 x i32]* %2){
block4:
	%3 = alloca i32
	store i32 %0, i32* %3
	%4 = alloca i32*
	store i32* %1, i32** %4
	%5 = alloca [3 x i32]*
	store [3 x i32]* %2, [3 x i32]** %5
	%6 = load i32, i32* %3
	%7 = load i32*, i32** %4
	%8 = getelementptr i32, i32* %7, i32 1
	%9 = load i32, i32* %8
	%10 = mul i32 %6, %9
	%11 = load [3 x i32]*, [3 x i32]** %5
	%12 = getelementptr [3 x i32], [3 x i32]* %11, i32 2, i32 1
	%13 = load i32, i32* %12
	%14 = sub i32 %10, %13
	ret i32 %14
}

define dso_local i32 @main(){
block5:
	%0 = alloca [2 x [3 x i32]]
	%1 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %0, i32 0, i32 0, i32 0
	store i32 1, i32* %1
	%2 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %0, i32 0, i32 0, i32 1
	store i32 2, i32* %2
	%3 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %0, i32 0, i32 0, i32 2
	store i32 3, i32* %3
	%4 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %0, i32 0, i32 0, i32 3
	store i32 0, i32* %4
	%5 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %0, i32 0, i32 0, i32 4
	store i32 0, i32* %5
	%6 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %0, i32 0, i32 0, i32 5
	store i32 0, i32* %6
	%7 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %0, i32 0, i32 0, i32 2
	%8 = load i32, i32* %7
	call void @a1(i32 %8)
	%9 = alloca i32
	%10 = getelementptr [6 x i32], [6 x i32]* @a, i32 0, i32 4
	%11 = load i32, i32* %10
	%12 = getelementptr [6 x i32], [6 x i32]* @a, i32 0, i32 0
	%13 = call i32 @a2(i32 %11, i32* %12)
	store i32 %13, i32* %9
	%14 = alloca i32
	%15 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* @b, i32 0, i32 0, i32 1
	%16 = load i32, i32* %15
	%17 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* @b, i32 0, i32 1, i32 0
	%18 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* @b, i32 0, i32 0
	%19 = call i32 @a3(i32 %16, i32* %17, [3 x i32]* %18)
	store i32 %19, i32* %14
	%20 = load i32, i32* %9
	%21 = load i32, i32* %14
	%22 = add i32 %20, %21
	call void @putint(i32 %22)
	ret i32 0
}

