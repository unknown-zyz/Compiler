declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)

@a = global i32 1

define dso_local i32 @func(){
block0:
	store i32 2, i32* @a
	ret i32 1
}

define dso_local i32 @func2(){
block1:
	store i32 4, i32* @a
	ret i32 10
}

define dso_local i32 @func3(){
block2:
	store i32 3, i32* @a
	ret i32 0
}

define dso_local i32 @main(){
block3:
	%0 = icmp ne i32 0, 0
	br i1 %0, label %block4, label %block6
block4:
	%1 = load i32, i32* @a
	call void @putint(i32 %1)
	call void @putch(i32 45)
	call void @putch(i32 45)
	call void @putch(i32 49)
	br label %block5
block5:
	%2 = icmp ne i32 1, 0
	br i1 %2, label %block9, label %block11
block6:
	%3 = call i32 @func()
	%4 = icmp ne i32 %3, 0
	br i1 %4, label %block8, label %block7
block7:
	%5 = call i32 @func2()
	%6 = icmp ne i32 %5, 0
	br i1 %6, label %block4, label %block5
block8:
	%7 = call i32 @func3()
	%8 = icmp ne i32 %7, 0
	br i1 %8, label %block4, label %block7
block9:
	%9 = load i32, i32* @a
	call void @putint(i32 %9)
	call void @putch(i32 45)
	call void @putch(i32 45)
	call void @putch(i32 50)
	br label %block10
block10:
	%10 = icmp ne i32 0, 0
	br i1 %10, label %block12, label %block14
block11:
	%11 = call i32 @func3()
	%12 = icmp ne i32 %11, 0
	br i1 %12, label %block9, label %block10
block12:
	%13 = load i32, i32* @a
	call void @putint(i32 %13)
	call void @putch(i32 45)
	call void @putch(i32 45)
	call void @putch(i32 51)
	br label %block13
block13:
	ret i32 0
block14:
	%14 = call i32 @func3()
	%15 = icmp ne i32 %14, 0
	br i1 %15, label %block12, label %block15
block15:
	%16 = call i32 @func()
	%17 = call i32 @func2()
	%18 = icmp slt i32 %16, %17
	%19 = icmp ne i1 %18, 0
	br i1 %19, label %block12, label %block13
}

