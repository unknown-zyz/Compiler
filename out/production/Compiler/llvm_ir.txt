declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)

@N = constant i32 10
@a = global [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9]

define dso_local i32 @fib(i32 %0){
l0:
	%1 = alloca i32
	store i32 %0, i32* %1
	%2 = load i32, i32* %1
	%3 = icmp eq i32 %2, 1
	%4 = icmp ne i1 %3, 0
	br i1 %4, label %l1, label %l2
l1:
	ret i32 1
l2:
	%5 = load i32, i32* %1
	%6 = icmp eq i32 %5, 2
	%7 = icmp ne i1 %6, 0
	br i1 %7, label %l3, label %l4
l3:
	ret i32 2
l4:
	%8 = load i32, i32* %1
	%9 = sub i32 %8, 1
	%10 = call i32 @fib(i32 %9)
	%11 = load i32, i32* %1
	%12 = sub i32 %11, 2
	%13 = call i32 @fib(i32 %12)
	%14 = add i32 %10, %13
	ret i32 %14
}

define dso_local i32 @main(){
l5:
	%0 = alloca i32
	store i32 2, i32* %0
	%1 = alloca i32
	store i32 5, i32* %1
	%2 = alloca i32
	store i32 1, i32* %2
	%3 = alloca i32
	store i32 2, i32* %3
	%4 = call i32 @getint()
	store i32 %4, i32* %0
	%5 = call i32 @getint()
	store i32 %5, i32* %1
	%6 = load i32, i32* %0
	%7 = load i32, i32* %1
	%8 = mul i32 %6, %7
	%9 = sub i32 0, %8
	%10 = call i32 @fib(i32 4)
	%11 = mul i32 %9, %10
	%12 = add i32 %11, 0
	%13 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%14 = load i32, i32* %13
	%15 = mul i32 %14, 1
	%16 = add i32 %12, %15
	%17 = sdiv i32 1, 2
	%18 = sub i32 %16, %17
	%19 = mul i32 %18, 5
	store i32 %19, i32* %0
	%20 = mul i32 7, 5923
	%21 = srem i32 %20, 56
	%22 = mul i32 %21, 57
	%23 = call i32 @fib(i32 5)
	%24 = add i32 %23, 2
	%25 = call i32 @fib(i32 %24)
	%26 = sub i32 %22, %25
	%27 = load i32, i32* %2
	%28 = load i32, i32* %3
	%29 = add i32 %27, %28
	%30 = sdiv i32 1531, 1
	%31 = mul i32 %30, 6
	%32 = sub i32 %29, %31
	%33 = mul i32 2, 454
	%34 = sub i32 %32, %33
	%35 = add i32 %26, %34
	store i32 %35, i32* %1
	%36 = alloca i32
	store i32 -6, i32* %36
	br label %l6
l6:
	%37 = load i32, i32* %0
	%38 = icmp slt i32 %37, 100
	%39 = icmp ne i1 %38, 0
	br i1 %39, label %l7, label %l8
l7:
	%40 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 0
	%41 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 0
	%42 = load i32, i32* %41
	%43 = load i32, i32* %36
	%44 = load i32, i32* %36
	%45 = mul i32 %43, %44
	%46 = add i32 %42, %45
	store i32 %46, i32* %40
	%47 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%48 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%49 = load i32, i32* %48
	%50 = load i32, i32* %36
	%51 = load i32, i32* %36
	%52 = mul i32 %50, %51
	%53 = add i32 %49, %52
	store i32 %53, i32* %47
	%54 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 2
	%55 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 2
	%56 = load i32, i32* %55
	%57 = load i32, i32* %36
	%58 = load i32, i32* %36
	%59 = mul i32 %57, %58
	%60 = add i32 %56, %59
	store i32 %60, i32* %54
	%61 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 3
	%62 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 3
	%63 = load i32, i32* %62
	%64 = load i32, i32* %36
	%65 = load i32, i32* %36
	%66 = mul i32 %64, %65
	%67 = add i32 %63, %66
	store i32 %67, i32* %61
	%68 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 4
	%69 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 4
	%70 = load i32, i32* %69
	%71 = load i32, i32* %36
	%72 = load i32, i32* %36
	%73 = mul i32 %71, %72
	%74 = add i32 %70, %73
	store i32 %74, i32* %68
	%75 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 5
	%76 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 5
	%77 = load i32, i32* %76
	%78 = load i32, i32* %36
	%79 = load i32, i32* %36
	%80 = mul i32 %78, %79
	%81 = add i32 %77, %80
	store i32 %81, i32* %75
	%82 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 6
	%83 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 6
	%84 = load i32, i32* %83
	%85 = load i32, i32* %36
	%86 = load i32, i32* %36
	%87 = mul i32 %85, %86
	%88 = add i32 %84, %87
	store i32 %88, i32* %82
	%89 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 7
	%90 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 7
	%91 = load i32, i32* %90
	%92 = load i32, i32* %36
	%93 = load i32, i32* %36
	%94 = mul i32 %92, %93
	%95 = add i32 %91, %94
	store i32 %95, i32* %89
	%96 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 8
	%97 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 8
	%98 = load i32, i32* %97
	%99 = load i32, i32* %36
	%100 = load i32, i32* %36
	%101 = mul i32 %99, %100
	%102 = add i32 %98, %101
	store i32 %102, i32* %96
	%103 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 9
	%104 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 9
	%105 = load i32, i32* %104
	%106 = load i32, i32* %36
	%107 = load i32, i32* %36
	%108 = mul i32 %106, %107
	%109 = add i32 %105, %108
	store i32 %109, i32* %103
	br label %l9
l8:
	store i32 0, i32* %0
	br label %l10
l9:
	%110 = load i32, i32* %0
	%111 = add i32 %110, 1
	store i32 %111, i32* %0
	br label %l6
l10:
	%112 = load i32, i32* %0
	%113 = icmp slt i32 %112, 10
	%114 = icmp ne i1 %113, 0
	br i1 %114, label %l11, label %l12
l11:
	%115 = load i32, i32* %0
	%116 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 %115
	%117 = load i32, i32* %116
	call void @putint(i32 %117)
	call void @putch(i32 44)
	call void @putch(i32 32)
	%118 = load i32, i32* %0
	%119 = add i32 %118, 1
	store i32 %119, i32* %0
	br label %l13
l12:
	call void @putch(i32 10)
	%120 = load i32, i32* %0
	call void @putint(i32 %120)
	call void @putch(i32 44)
	call void @putch(i32 32)
	%121 = load i32, i32* %1
	call void @putint(i32 %121)
	call void @putch(i32 44)
	call void @putch(i32 32)
	%122 = load i32, i32* %36
	call void @putint(i32 %122)
	call void @putch(i32 10)
	ret i32 0
l13:
	br label %l10
}

