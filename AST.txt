<CompUnit>
	<ConstDecl>
		const
		int
		<ConstDef>
			a
			=
			<ConstInitVal>
				<ConstExp>
					<AddExp>
						<MulExp>
							<UnaryExp>
								<PrimaryExp>
									<Number>
										1
		;
	<VarDecl>
		int
		<VarDef>
			b
			=
			<InitVal>
				<Exp>
					<AddExp>
						<AddExp>
							<MulExp>
								<MulExp>
									<UnaryExp>
										<PrimaryExp>
											<Number>
												2
								*
								<UnaryExp>
									<PrimaryExp>
										<Number>
											6
						+
						<MulExp>
							<UnaryExp>
								<PrimaryExp>
									<Number>
										1
		,
		<VarDef>
			_a_b
			[
			<ConstExp>
				<AddExp>
					<AddExp>
						<MulExp>
							<MulExp>
								<UnaryExp>
									<PrimaryExp>
										<Number>
											2
							%
							<UnaryExp>
								<PrimaryExp>
									<Number>
										2
					+
					<MulExp>
						<UnaryExp>
							<PrimaryExp>
								<Number>
									1
			]
			=
			<InitVal>
				{
				<InitVal>
					<Exp>
						<AddExp>
							<MulExp>
								<UnaryExp>
									<PrimaryExp>
										<Number>
											5
				}
		,
		<VarDef>
			_a_3_b
			[
			<ConstExp>
				<AddExp>
					<AddExp>
						<MulExp>
							<MulExp>
								<UnaryExp>
									<PrimaryExp>
										<Number>
											2
							/
							<UnaryExp>
								<PrimaryExp>
									<Number>
										2
					+
					<MulExp>
						<UnaryExp>
							<PrimaryExp>
								<Number>
									1
			]
			[
			<ConstExp>
				<AddExp>
					<AddExp>
						<MulExp>
							<MulExp>
								<UnaryExp>
									<PrimaryExp>
										<Number>
											2
							*
							<UnaryExp>
								<PrimaryExp>
									<Number>
										1
					-
					<MulExp>
						<UnaryExp>
							<PrimaryExp>
								<Number>
									1
			]
			=
			<InitVal>
				{
				<InitVal>
					{
					<InitVal>
						<Exp>
							<AddExp>
								<MulExp>
									<UnaryExp>
										<PrimaryExp>
											<Number>
												0
					}
				,
				<InitVal>
					{
					<InitVal>
						<Exp>
							<AddExp>
								<AddExp>
									<MulExp>
										<MulExp>
											<UnaryExp>
												<PrimaryExp>
													<Number>
														3452
										%
										<UnaryExp>
											<PrimaryExp>
												<Number>
													2
								+
								<MulExp>
									<MulExp>
										<UnaryExp>
											<PrimaryExp>
												<Number>
													4
									*
									<UnaryExp>
										<PrimaryExp>
											<Number>
												3
					}
				}
		;
	<MainFuncDef>
		int
		main
		(
		)
		<Block>
			{
			<VarDecl>
				int
				<VarDef>
					b
					=
					<InitVal>
						<Exp>
							<AddExp>
								<AddExp>
									<MulExp>
										<MulExp>
											<UnaryExp>
												<PrimaryExp>
													<Number>
														2
										*
										<UnaryExp>
											<PrimaryExp>
												<Number>
													6
								+
								<MulExp>
									<UnaryExp>
										<PrimaryExp>
											<Number>
												1
				,
				<VarDef>
					_a_b
					[
					<ConstExp>
						<AddExp>
							<AddExp>
								<MulExp>
									<MulExp>
										<UnaryExp>
											<PrimaryExp>
												<Number>
													2
									%
									<UnaryExp>
										<PrimaryExp>
											<Number>
												2
							+
							<MulExp>
								<UnaryExp>
									<PrimaryExp>
										<Number>
											1
					]
					=
					<InitVal>
						{
						<InitVal>
							<Exp>
								<AddExp>
									<MulExp>
										<UnaryExp>
											<PrimaryExp>
												<Number>
													5
						}
				,
				<VarDef>
					_a_3_b
					[
					<ConstExp>
						<AddExp>
							<AddExp>
								<MulExp>
									<MulExp>
										<UnaryExp>
											<PrimaryExp>
												<Number>
													2
									/
									<UnaryExp>
										<PrimaryExp>
											<Number>
												2
							+
							<MulExp>
								<UnaryExp>
									<PrimaryExp>
										<Number>
											1
					]
					[
					<ConstExp>
						<AddExp>
							<AddExp>
								<MulExp>
									<MulExp>
										<UnaryExp>
											<PrimaryExp>
												<Number>
													2
									*
									<UnaryExp>
										<PrimaryExp>
											<Number>
												1
							-
							<MulExp>
								<UnaryExp>
									<PrimaryExp>
										<Number>
											1
					]
					=
					<InitVal>
						{
						<InitVal>
							{
							<InitVal>
								<Exp>
									<AddExp>
										<MulExp>
											<UnaryExp>
												<PrimaryExp>
													<Number>
														0
							}
						,
						<InitVal>
							{
							<InitVal>
								<Exp>
									<AddExp>
										<AddExp>
											<MulExp>
												<MulExp>
													<UnaryExp>
														<PrimaryExp>
															<Number>
																3452
												%
												<UnaryExp>
													<PrimaryExp>
														<Number>
															2
										+
										<MulExp>
											<MulExp>
												<UnaryExp>
													<PrimaryExp>
														<Number>
															4
											*
											<UnaryExp>
												<PrimaryExp>
													<Number>
														3
							}
						}
				;
			<Stmt>
				return
				<Exp>
					<AddExp>
						<MulExp>
							<UnaryExp>
								<PrimaryExp>
									<Number>
										0
				;
			}
